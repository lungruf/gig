#line = ""
#for i in range(5):
 #       line += "*"
#print(line)

#tex = "–í –º—è–≥–∫–æ–π –ö–æ–º–ù–æ—Ç–µ –ñ–ò–ª –ó–õ–û–ô –∫–æ—Ç"
# print (len(tex)) # –ø–æ–≥–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ –∏–ª–∏ –µ—â–µ –≥–¥–µ—Ç–æ 
#print ("–∫–æ—Ç" in tex) # –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –µ—Å—Ç—å –ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ —ç—Ç–∏ —Å–ª–æ–≤–∞ 
#print (tex.replace("–∫–æ—Ç","—Å–æ–±–∞–∫–∞")) # –∑–∞–º–µ–Ω—è—è–µ—Ç –≤—ã–±—Ä–æ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –Ω–∞ –Ω–æ–≤—ã–µ

#list_1 = [3, 2, 3, 4, 3]
#k = 3   list_1.append
#j = 0

#for i in list_1 :
   # if i == 3:
  #      j =j+1
#print (j)

#lis_1 =[1,5,9]
#lis_1.append(8) #–¥–æ–±–æ–≤–ª—è–µ—Ç –≤ –∫–æ–Ω—Ü —Å–ø–∏—Å–∫–∞ –Ω–æ–≤—ã–π —ç–ª–µ–º–º–µ–Ω—Ç
#print(lis_1)


#lis_2 = []

#for i in range(5):
#    lis_2.append(i)
#print(lis_2)

#lis_3 = [3,6,8,9]
#lis_3.pop(0)
#print(lis_3)

#–°—Ä–µ–∑ —Å–ø–∏—Å–∫–∞
#–ü–æ–º–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Ü–µ –ø–µ—Ä–≤–æ–π –ª–µ–∫—Ü–∏–∏ –í—ã –ø—Ä–æ—à–ª–∏ —Å—Ä–µ–∑—ã —Å—Ç—Ä–æ–∫? –¢–∞–∫–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å—Ä–µ–∑
#—Å–ø–∏—Å–∫–∞, –¥–∞–≤–∞–π—Ç–µ –Ω–∞—É—á–∏–º—Å—è –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—à —Å–ø–∏—Å–æ–∫
#‚óè –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –≤ –∏–Ω–¥–µ–∫—Å–µ ‚Äî —Å—á—ë—Ç —Å –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞
#list_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#print(list_1[0]) # 1
#print(list_1[1]) # 2
#print(list_1[len(list_1)-1]) # 10
#print(list_1[-5]) # 6
#print(list_1[:]) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#print(list_1[:2]) # [1, 2]
#print(list_1[len(list_1)-2:]) #[9, 10]
#print(list_1[2:9]) # [3, 4, 5, 6, 7, 8, 9]
#print(list_1[6:-18]) # []
#print(list_1[0:len(list_1):6]) # [1, 7]
#print(list_1[::6]) # [1, 7]

"""
–ö–æ—Ä—Ç–µ–∂–∏
üí° –ö–æ—Ä—Ç–µ–∂ ‚Äî —ç—Ç–æ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π —Å–ø–∏—Å–æ–∫.
–¢–æ–≥–¥–∞ –¥–ª—è —á–µ–≥–æ –Ω—É–∂–Ω—ã –∫–æ—Ä—Ç–µ–∂–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å? –í —Å–ª—É—á–∞–µ –∑–∞—â–∏—Ç—ã
–∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π (–Ω–∞–º–µ—Ä–µ–Ω–Ω—ã—Ö –∏–ª–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö). –ö–æ—Ä—Ç–µ–∂ –∑–∞–Ω–∏–º–∞–µ—Ç
–º–µ–Ω—å—à–µ –º–µ—Å—Ç–∞ –≤ –ø–∞–º—è—Ç–∏ –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –±—ã—Å—Ç—Ä–µ–µ, –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å–æ —Å–ø–∏—Å–∫–∞–º–∏
t = () # —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –∫–æ—Ä—Ç–µ–∂–∞
print(type(t)) # class <'tuple'>
t = (1,)
print(type(t))
t = (1)
print(type(t))
t = (28, 9, 1990)
print(type(t))
colors = ['red', 'green', 'blue']
print(colors) # ['red', 'green', 'blue']
t = tuple(colors)
print(t) # ('red', 'green', 'blue')
t = tuple(['red', 'green', 'blue'])
print(t[0]) # red
print(t[2]) # blue
for e in t:
print(e) # red green blue
t[0] = 'black' # TypeError: 'tuple' object does not support(–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å
–∫–æ—Ä—Ç–µ–∂

"""


# list_1 =[1, 1, 2, 0, -1, 3, 4, 4]




"""
list = [1, 2, 3, 8, 6]
print(list)
x = int(input("–í–≤–µ–¥–∏—Ç–µ –∏—Å–∫–æ–º–æ–µ —á–∏—Å–ª–æ "))
index_element = 0
min_element = abs(x - list[0])
for i in range(1, len(list)):
    buffer_element = abs(x -list[i])
    if buffer_element < min_element:
        min_element = buffer_element
        index_element = i

print(f"–°–∞–º—ã–π –±–ª–∏–∑–∫–∏–π –ø–æ –≤–µ–ª–∏—á–∏–Ω–µ —ç–ª–µ–º–µ–Ω—Ç –∫ –∑–∞–¥–∞–Ω–Ω–æ–º—É —á–∏—Å–ª—É {list[index_element]}")

"""

"""
a = [1, 2, 3, 4, 5]
k = 3

lis = a[-k:] + a[:-k]
print (lis)

"""
"""

slov = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},{"VI": "S005"}, {"VII": "S005"}, {" V ":" S009 "}, {" VIII ":" S007 "}] 
slov2 = []

for  i in slov:
    for (j,l) in i.items():
      slov2.append(l)

slov3 = slov2
slov3 = set(slov3)
print(slov3)
"""


"""
list_1 = [1, 2, 3, 4, 5,6,7,10]


k = 9
m = abs(k - list_1[0]) 

number = list_1[0]
for i in range(1, len(list_1)):
    if m >= abs(list_1[i] - k):
        m = abs(list_1[i] - k)
        number = list_1[i]
print(f' –ë–ª–∏–∂–∞–π—à–µ–µ —á–∏—Å–ª–æ –∫ —ç–ª–µ–º–µ–Ω—Ç—É {k} - {number}')
"""
"""
k = '–Ω–æ—É—Ç–±—É–∫'
slov = k.upper()

num = 0

lis_1 = {1:"AEIOULNSTR–ê–í–ï–ò–ù–û–†–°–¢" , 2:"DG–î–ö–õ–ú–ü–£" , 3:"BCM, P, –ë, –ì, –Å, –¨, –Ø" , 4:"F, H, V, W, Y,–ô, –´ " , 5:"K,–ñ, –ó, –•, –¶, –ß", 8:"J, X, –®, –≠, –Æ", 10:"Q, Z,–§, –©, –™"}
for i in slov:
    for g,j in lis_1.items():
          if i in j :
              num = num + g
print(num)


 a a_1 a_2 b c a_3 a_4 d c_1 d_1 d_2

"""

"""
new = "a a a b c a a d c d d"
new = new.split()
dict_1 = {}
print(new)
for leteer in new:
    if leteer in dict_1:
        dict_1[leteer] = dict_1[leteer] + 1
        print(leteer + "_" +  str(dict_1[leteer]),end = " ")
    else : 
        dict_1[leteer] = 0
        print(leteer , end=" ")
  
  
  
  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç(—Å—Ç—Ä–æ–∫–∞). –°–ª–æ–≤–æ–º —Å—á–∏—Ç–∞–µ—Ç—Å—è 
–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–µ–ø—Ä–æ–±–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏–¥—É—â–∏—Ö 
–ø–æ–¥—Ä—è–¥, —Å–ª–æ–≤–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –æ–¥–Ω–∏–º –∏–ª–∏ –±–æ–ª—å—à–∏–º —á–∏—Å–ª–æ–º 
–ø—Ä–æ–±–µ–ª–æ–≤. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ª–æ–≤ 
—Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —ç—Ç–æ–º —Ç–µ–∫—Å—Ç–µ.
Input: She sells sea shells on the sea shore The shells
that she sells are sea shells I'm sure.So if she sells sea
shells on the sea shore I'm sure that the shells are sea
shore shells
Output: 13

"""
"""
stroc = "She sells sea shells on the sea shore The shells that she sells are sea shells I'm sure So if she sells sea shells on the sea shore I'm sure that the shells are sea shore shells"
stroc = stroc.lower()
stroc = stroc.split()
stroc = set(stroc)
print(len(stroc))

"""
"""
n = 1
max_number = 0

while n != 0:
    n = int(input("–í–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É "))
    if max_number < n:
        max_number = n
print(max_number)

"""
"""
num1 =int(input("–í–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ 1 "))

def ylim  (a):
    mnoj = set()
    b = 0
    for i in range(a):
        b = int(input("–í–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É"))
        mnoj.add(b)
    return mnoj


nat = ylim(num1)
             
num2 =int(input("–í–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ 2 "))

nat2 = ylim(num2)

scrat = set()
scrat = nat.intersection(nat2)
print(scrat)


–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞ –≤—Ö–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ A –∏ B, –∏ –≤–æ–∑–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ –ê –≤ —Ü–µ–ª—É—é —Å—Ç–µ–ø–µ–Ω—å B —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫—É—Ä—Å–∏–∏.
"""
"""
a = 3
b = 5

def f (g,h):
    if h == 0:
        return 1
    return a * f(g, h - 1)
print(f(a,b))
–ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é sum(a, b), –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é —Å—É–º–º—É –¥–≤—É—Ö —Ü–µ–ª—ã—Ö –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª. –ò–∑ –≤—Å–µ—Ö –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ +1 –∏ -1. –¢–∞–∫–∂–µ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª—ã.
"""
"""
def sum(a,b):
   if b == 0:
       return a
   return  sum(a + 1,b - 1)
print (sum(5,3))
"""
"""
pervy = int(input("–í–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ "))

def otb (a):
    b = set()
    d = 0
    for i in range(a):
        d = int(input("–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç "))
        b.add(d)
    return b

otb1 = otb(pervy)
print(otb1)
pervy2 = int(input("–í–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ "))
otb2 = otb(pervy2)
print(otb2)

otvet = otb1.difference(otb2)
print(otvet)

from random import lan
"""
"""
'''–ó–∞–¥–∞—á–∞ 30: –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏. –ï—ë –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç, —Ä–∞–∑–Ω–æ—Å—Ç—å –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã. –§–æ—Ä–º—É–ª–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è n-–≥–æ —á–ª–µ–Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏: a
n = a1 + (n-1) * d.
–ö–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –≤–≤–æ–¥–∏—Ç—Å—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
–í–≤–æ–¥: 7 2 5
–í—ã–≤–æ–¥: 7 9 11 13 15'''

per = int (input("–í–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç "))
raz = int (input("–í–µ–¥–∏—Ç–µ —Ä–∞–∑–Ω–æ—Å—Ç—å "))
n = int (input("–í–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ "))
for i in range(n):
    print(per + i * raz, end=" ")
    
'''–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–Ω–¥–µ–∫—Å—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ (—Å–ø–∏—Å–∫–∞), –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –∑–∞–¥–∞–Ω–Ω–æ–º—É –¥–∏–∞–ø–∞–∑–æ–Ω—É
(—Ç.–µ. –Ω–µ –º–µ–Ω—å—à–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –º–∏–Ω–∏–º—É–º–∞ –∏ –Ω–µ –±–æ–ª—å—à–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞)
–í–≤–æ–¥: [-5, 9, 0, 3, -1, -2, 1, 4, -2, 10, 2, 0, -9, 8, 10, -9, 0, -5, -5, 7]
–í—ã–≤–æ–¥: [1, 9, 13, 14, 19]'''


spisk1 = [-5, 9, 0, 3, -1, -2, 1, 4, -2, 10, 2, 0, -9, 8, 10, -9, 0, -5, -5, 7]
spisk2 = []
min = 5
max = 9
for i in range(len(spisk1)):
    if min <= spisk1[i] <= max:
      spisk2.append(i)
print(spisk2)
"""
"""

num1 =int(input("–í–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤  "))

def ylim  (a):
    mnoj = []
    b = 0
    for i in range(a):
        b = int(input("–í–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É"))
        mnoj.append(b)
    return mnoj


nat = ylim(num1)

print(nat)

count = 0

for i in range(len(nat)):
    for g in range(nat[i - 1]):
        print(nat[g],end=" ")
"""
"""
transformation = lambda x : x + x
values = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29] # –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Å–ø–∏—Å–æ–∫
transormed_values = list(map(transformation, values))
if values == transormed_values:
    print("ok")
else:
   print(transormed_values)
""" 
def username ():
   return input("–í–µ–¥–∏—Ç–µ –∏–º—è ").title()

def tow_name ():
   return input("–í–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é ").title()

def three_name ():
   return input("–í–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ ").title()

def tel ():
   return input("–í–µ–¥–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω ").title()

def dat ():
    name = username()
    surname =  tow_name()
    tree_name = three_name()
    telefon = tel()
    with open ('contacts.txt','a',encoding = 'utf-8') as fail:
        fail.write(f'{name} {surname}\n{tree_name}\n{telefon}\n\n')
        
def prin_contact():
    with open('contacts.txt','r') as dart:
     asur = dart.read()
     print(asur)
    menu()
    playmenu()

def poisc ():
    serch = input("–í–µ–¥–∏—Ç–µ –∏–º—è ").title()
    with open('contacts.txt','r',encoding = 'utf-8') as dart:
        ime = dart.read().split("\n\n")
        for i in ime:
            if serch in i:
                print("")
                print (i)
                print("")
    menu()
    playmenu()
        
def delit ():
    print("–í—ã–±–∏—Ä–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å")
    with open('contacts.txt','r',encoding = 'utf-8') as dart:
         dart.seek(0)
         ime = dart.read().split("\n\n")
         alert= list(enumerate(ime,1))
         for i in alert:
             for j in i:
                 print(j)
         delit = int(input("–í–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ —É–¥–∞–ª–∏—Ç—å ")) - 1
         alert.pop(delit)
         for v in alert:
             for x in v:
                 print(x)
    menu()
    playmenu()
    


def menu(): 
    print("  Menu  ")
    print("_____________________________")
    print(" (1) -- –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã ")
    print(" (2) -- –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç")
    print(" (3) -- –ù–∞–π—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç")
    print(" (4) -- –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç")
    print(" (5) --  Exit")
    print("_____________________________")

menu()
def playmenu():
 play = int(input(""))
 if play == 1:
    prin_contact()
 elif play == 2:
    dat()
 elif play == 3:
     poisc()
 elif play == 4:
     delit()
playmenu()